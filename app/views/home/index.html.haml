%h1
  Schedule
%table.table.table-striped.schedule-table
  %thead.thead-dark
    %tr
      %th
        Time of Day
      - @technicians.each do |t|
        %th{:scope => "col"}= t[:name]
  %tbody
    - current_time = 0
    - 96.times do
      %tr
        %th
          = Time.at(current_time.minutes).utc.strftime("%H:%M %p")
        - @technicians.each do |tech|
          - technician_work_orders = @work_orders.where(technician_id: tech[:id], time: DateTime.parse("2010-01-19") + current_time.minutes )
          - if technician_work_orders.empty?
            - if tech[:wo_duration_slots] > 0
              %th.filled_slot{:data => {:wo_id => tech[:wo_id], :tech_id => tech[:id]}}
              - tech[:wo_duration_slots] = tech[:wo_duration_slots] - 1
            -else
              - if tech[:first_wo_found] == true
                - tech[:time_since_previous] = tech[:time_since_previous].to_i + 15
              %th.empty_slot{:data => {:time_since_previous => tech[:time_since_previous], :tech_id => tech[:id]}}
          - else
            - tech[:time_since_previous] = 0
            - tech[:first_wo_found] = true
            - technician_work_orders.each do |wo|
              %th.filled_slot.first_filled_slot{:data => {:wo_id => wo.id, :tech_id => tech[:id], :name => wo.location.name, :city => wo.location.city, :time => wo.time, :duration => wo.duration.to_s + "m", :price => number_to_currency(wo.price)}}
                %h5= wo.location.name
              - tech[:wo_duration_slots] = (wo.duration / 15) - 1
              - tech[:wo_id] = wo.id
      - current_time = current_time + 15
